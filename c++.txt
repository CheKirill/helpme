use fast_pool_allocator when dealing with containers such as std::list
use pool_allocator when dealing with containers such as std::vector
http://www.boost.org/doc/libs/1_48_0/libs/pool/doc/html/boost/fast_pool_allocator.html

#define private friend class Hack; private
Notes:
If class Hack and target class are from different namespaces,
then class Hack must be declared before target class definition,
and class name in friend-statement should be prepended  with namespaces

Static linking with compiler libs:
Project Settings->Configuration Settings->C/C++->Code Generation:
Runtime Library := Multi-threaded (/MT)

Specialization:
    template<> class vector<bool>
Partial specialization:
    template <class T> void swap(vector<T>&, vector<T>&);

Stepanov:
    http://www.sgi.com/tech/stl/drdobbs-interview.html

FAQ:
     http://www.parashift.com/c++-faq-lite/
FQA:
    http://yosefk.com/c++fqa/

Concepts are likely to be presented by keyword "typename"
(parameters of templates or new types, created by template code)
used as type replacements for compile-time duck typing.
    http://en.wikipedia.org/wiki/Concept_(generic_programming)
    http://en.wikipedia.org/wiki/Concepts_(C++)
    http://www.boost.org/doc/libs/1_50_0/libs/concept_check/concept_check.htm

logical_cast:
    throws for references
    returns 0 for pointers

Caller graphs and profiling:
    valgrind --tool=callgrind
    kcachegrind for view

